{"openapi":"3.0.2","info":{"title":"FAIR Combine API","description":"\nFAIR Combine is a web application designed to help users assess how FAIR their\ntheir Combine resources are.\n\nUsers may submit their Combine model, and the application will create a list\nof assessments following the FAIR principle. Some of these assessments will run\nin the background while others will need to be filled by the users.\n\nOnce all assessments are completed, the application returns a set of scores\ndescribing how FAIR their model is.\n","version":"0.0.1"},"paths":{"/session":{"post":{"tags":["Sessions"],"summary":"Create Session","description":"Create a new session based on user input\n\n**Parameters:**\n\n- *subject*: Pydantic model containing user input.\n\n**Returns:**\nThe created session","operationId":"create_session_session_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SessionSubjectIn"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Session"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/resume":{"post":{"tags":["Sessions"],"summary":"Load Session","description":"Load a session based on JSON previously downloaded by user\n\n**Parameters:**\n\n- *session*: A JSON object representing a Session.\n\n**Returns:**\nThe loaded session","operationId":"load_session_session_resume_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Session"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Session"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/{session_id}":{"get":{"tags":["Sessions"],"summary":"Session Details","description":"Returns the details about an existing session\n\n**Parameters:**\n\n- *session_id*: A session identifier\n\n**Returns:**\nThe session object corresponding to the given id","operationId":"session_details_session__session_id__get","parameters":[{"required":true,"schema":{"title":"Session Id","type":"string"},"name":"session_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Session"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/session/{session_id}/tasks/{task_id}":{"get":{"tags":["Tasks"],"summary":"Task Detail","description":"Returns the information about a specific Task\n\n**Parameters:**\n\n- *session_id*: A session identifier\n- *task_id*: A task identifier\n\n**Returns:**\nThe Task associated with the given identifier","operationId":"task_detail_session__session_id__tasks__task_id__get","parameters":[{"required":true,"schema":{"title":"Session Id","type":"string"},"name":"session_id","in":"path"},{"required":true,"schema":{"title":"Task Id","type":"string"},"name":"task_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Task"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"patch":{"tags":["Tasks"],"summary":"Update Task","description":"Edit the status of a Task to the given TaskStatus and recalculate the\ndefault status for the children of that Task\n\n**Parameters:**\n\n- *session_id*: The id of the session the Task is associated with\n- *task_id*: The identifier of the wanted Task\n- *task_status*: The new TaskStatus\n\n**Returns:**\nThe session with the updated Tasks","operationId":"update_task_session__session_id__tasks__task_id__patch","parameters":[{"required":true,"schema":{"title":"Session Id","type":"string"},"name":"session_id","in":"path"},{"required":true,"schema":{"title":"Task Id","type":"string"},"name":"task_id","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaskStatusIn"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Session"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/indicators":{"get":{"tags":["Indicators"],"summary":"Indicator Descriptions All","description":"Returns all the FAIR assessments evaluated in FAIR Combine\n\n**Returns:**\n\nThe list of all FAIR Combine assessment indicators","operationId":"indicator_descriptions_all_indicators_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"title":"Response Indicator Descriptions All Indicators Get","type":"array","items":{"$ref":"#/components/schemas/Indicator"}}}}}}}},"/indicators/{name}":{"get":{"tags":["Indicators"],"summary":"Indicator Description","description":"Returns a specific FAIR assessments indicator\n\n**Parameters:**\n\n- *name*: A FAIR Combine assessment name (e.g. CA-RDA-F1-01Archive)\n\n**Returns:**\nThe Indicator associated with the given name","operationId":"indicator_description_indicators__name__get","parameters":[{"required":true,"schema":{"title":"Name","type":"string"},"name":"name","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Indicator"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"HTTPValidationError":{"title":"HTTPValidationError","type":"object","properties":{"detail":{"title":"Detail","type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}},"Indicator":{"title":"Indicator","required":["name","group","sub_group","priority","question","short","description"],"type":"object","properties":{"name":{"title":"Name","type":"string"},"group":{"title":"Group","type":"string"},"sub_group":{"title":"Sub Group","type":"string"},"priority":{"title":"Priority","type":"string"},"question":{"title":"Question","type":"string"},"short":{"title":"Short","type":"string"},"description":{"title":"Description","type":"string"}},"description":"Pydantic model for a FAIR assessment\n\n- *name*: The name of the assessment\n- *group*: The FAIR group an assessment belongs to (e.g. 'F', or 'A')\n- *sub_group*: The FAIR subgroup an assessment belongs to (e.g. `F1`, or `I3`)\n- *priority*: How important this assessment is\n- *question*: The question asked for this assessment\n- *short*: A short description of the assessment\n- *description*: A in-depth description of the assessment"},"Session":{"title":"Session","required":["id","session_subject"],"type":"object","properties":{"id":{"title":"Id","type":"string"},"session_subject":{"$ref":"#/components/schemas/SessionSubjectIn"},"tasks":{"title":"Tasks","type":"object","additionalProperties":{"$ref":"#/components/schemas/Task"},"default":{}},"status":{"allOf":[{"$ref":"#/components/schemas/SessionStatus"}],"default":"queued"},"score_all_essential":{"title":"Score All Essential","type":"number"},"score_all_nonessential":{"title":"Score All Nonessential","type":"number"},"score_all":{"title":"Score All","type":"number"},"score_applicable_essential":{"title":"Score Applicable Essential","type":"number"},"score_applicable_nonessential":{"title":"Score Applicable Nonessential","type":"number"},"score_applicable_all":{"title":"Score Applicable All","type":"number"},"ratio_not_applicable":{"title":"Ratio Not Applicable","type":"number"}},"description":"A session object\n\n- *id*: The session identifier\n- *session_subject*: The user input used to create the session. See *SessionSubjectIn* model\n- *tasks*: Mapping of task identifiers to the corresponding Task object. Tasks with a parent are not included in\nthis mapping (see Task model)\n- *status*: The session status (see SessionStatus model)\n- *score_all_essential*: Score based on all essential Tasks statuses\n- *score_all_non_essential*: Score based on all non-essential Tasks statuses\n- *score_all*: Score based on all Tasks statuses, including non-essential ones\n- *score_applicable_essential*: Identical to *score_all_essential*, excluding non-applicable Tasks\n- *score_applicable_nonessential*: Identical to *score_all_non_essential*, excluding non-applicable Tasks\n- *score_applicable_all*: Identical to *score_all*, excluding non-applicable Tasks\n- *ratio_not_applicable*: Percentage of assessments that do not apply to the evaluated resource"},"SessionStatus":{"title":"SessionStatus","enum":["queued","preprocessing","running","postprocessing","finished","error"],"type":"string","description":"List of statuses for a user session:\n\n- *queued*: The session object is created, but is not ready to run yet\n- *preprocessing*: The session is preparing the necessary information to run\n- *running*: Some of the Tasks associated with the session are not done\n- *postprocessing*: All Tasks are finished, and the session is cleaning up\n- *finished*: Everything is done\n- *error*: An error occurred while running"},"SessionSubjectIn":{"title":"SessionSubjectIn","required":["subject_type"],"type":"object","properties":{"path":{"title":"Path","anyOf":[{"maxLength":2083,"minLength":1,"type":"string","format":"uri"},{"maxLength":65536,"minLength":1,"type":"string","format":"uri"},{"type":"string","format":"file-path"}]},"has_archive":{"title":"Has Archive","type":"boolean"},"has_model":{"title":"Has Model","type":"boolean"},"has_archive_metadata":{"title":"Has Archive Metadata","type":"boolean"},"is_model_standard":{"title":"Is Model Standard","type":"boolean"},"is_archive_standard":{"title":"Is Archive Standard","type":"boolean"},"is_model_metadata_standard":{"title":"Is Model Metadata Standard","type":"boolean"},"is_archive_metadata_standard":{"title":"Is Archive Metadata Standard","type":"boolean"},"is_biomodel":{"title":"Is Biomodel","type":"boolean"},"is_pmr":{"title":"Is Pmr","type":"boolean"},"subject_type":{"$ref":"#/components/schemas/SubjectType"}},"description":"Data input necessary to create a session object.\n\n- *path*: The PATH towards the resource (not required if *subject_type* is **manual**)\n- *has_archive*: Whether the assessed resource contains an archive (required attribute if *subject_type* is **manual**)\n- *has_model*: Whether the assessed resource contains a model (required attribute if *subject_type* is **manual**)\n- *has_archive_metadata*: Whether the assessed resource has metadata regarding the archive (required attribute if *subject_type* is **manual**)\n- *is_model_standard*: Whether the assessed model is in standard format (CellML, SBML, ...; required attribute if *subject_type* is **manual**)\n- *is_archive_standard*: Whether the assessed archive is in OMEX format (required attribute if *subject_type* is **manual**)\n- *is_model_metadata_standard*:\n- *is_archive_metadata_standard*: Whether the OMEX archive contains a manifest.xml file (required attribute if *subject_type* is **manual**)\n- *is_biomodel*: Whether the model comes from BioModel (required attribute if *subject_type* is **manual**)\n- *is_pmr*: Whether the model comes from PMR (required attribute if *subject_type* is **manual**)\n- *subject_type*: See SubjectType model"},"SubjectType":{"title":"SubjectType","enum":["url","file","manual"],"type":"string","description":"Types of assessments queried by the user:\n- *url*: The archive/model to evaluate is at a specific url\n- *file*: The archive/model file is directly provided by the user\n- *manual*: No file is provided, the user will assess themselves the archive/model"},"Task":{"title":"Task","required":["id","name","session_id"],"type":"object","properties":{"id":{"title":"Id","type":"string"},"name":{"title":"Name","type":"string"},"session_id":{"title":"Session Id","type":"string"},"children":{"title":"Children","type":"object","additionalProperties":{"$ref":"#/components/schemas/Task"},"default":{}},"priority":{"allOf":[{"$ref":"#/components/schemas/TaskPriority"}],"default":"essential"},"status":{"allOf":[{"$ref":"#/components/schemas/TaskStatus"}],"default":"queued"},"comment":{"title":"Comment","type":"string","default":""},"disabled":{"title":"Disabled","type":"boolean","default":false},"score":{"title":"Score","type":"number"}},"description":"The running of a FAIR assessment in one particular Session object\n\n- *id*: A Task identifier\n- *name*: Name of the indicator assessed by a Task\n- *session_id*: The Session identifier a Task belongs to\n- *children*: Mapping of task identifiers that depends on this Task status to the corresponding\n    Task objects\n- *priority*: Describes how important a task is.\n- *status*: The task current status (see TaskStatus model)\n- *comment*: Additional comment for a task\n- *disabled*: True if the Task status cannot be edited by user. False otherwise\n- *score*: 1 if Task status is **success**, 0 if **failed**, 0.5 if **warnings**, null otherwise."},"TaskPriority":{"title":"TaskPriority","enum":["essential","important","useful"],"type":"string","description":"An enumeration."},"TaskStatus":{"title":"TaskStatus","enum":["queued","started","success","failed","warnings","error","not_applicable","not_answered"],"type":"string","description":"Possible status for an assessment task:\n\n- *queued*: Task was created but has not started yet\n- *started*: Task is currently running\n- *success*: Task passed the FAIR assessment\n- *failed*: Tasks did not pass the FAIR assessment\n- *warnings*: Tasks partially passed the FAIR assessment\n- *error*: An error occurred while the Task was running\n- *not_applicable*: The assessment is not applicable to the model/archive\n- *not_answered*: In self-assessments, the user refused to answer the question"},"TaskStatusIn":{"title":"TaskStatusIn","required":["status"],"type":"object","properties":{"status":{"$ref":"#/components/schemas/TaskStatus"}},"description":"Pydantic model for user to submit a status when editing a Task (see route\n`update_task`)"},"ValidationError":{"title":"ValidationError","required":["loc","msg","type"],"type":"object","properties":{"loc":{"title":"Location","type":"array","items":{"anyOf":[{"type":"string"},{"type":"integer"}]}},"msg":{"title":"Message","type":"string"},"type":{"title":"Error Type","type":"string"}}}}},"tags":[{"name":"Indicators","description":"FAIR Combine assessments. Endpoints to retrieve the descriptions of the assessments done by the application to evaluate how FAIR a resource is/"},{"name":"Tasks","description":"FAIR Combine tasks. Endpoints allow to retrieve the details of a specific assessment associated with a session, to update an assessment status or to retrieve the documentation of FAIR Combine assessments."},{"name":"Sessions","description":"FAIR Combine assessment session. Endpoints to create a new session, to load a previously exported session, or to display the details of an existing session."}]}